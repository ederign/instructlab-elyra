#
# Generated by Elyra 4.2.0
#
import kfp
from kubernetes.client import *
from kubernetes.client.models import *
from kfp.kubernetes import secret, volume

from typing import Optional

# ------------------------------------------------------------------
# kfp-kubernetes 1.1.0 is misisng these function, explicity using them,
# TODO: remove these function once a new release of kfp-kubernetes is made.
# ------------------------------------------------------------------

from google.protobuf import json_format
from kfp.dsl import PipelineTask
from kfp.kubernetes import common
from kfp.kubernetes import kubernetes_executor_config_pb2 as pb

from kfp.kubernetes import add_toleration, add_pod_label, add_pod_annotation


component_def_515ee1eb897ee523776e2b44520b047b745f3087c1628dcf7040b9071f6de010 = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "[[ -e '/opt/app-root/bin/utils/bootstrapper.py' ]] && (echo 'bootstrapper.py file already exists'; cp '/opt/app-root/bin/utils/bootstrapper.py' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py' --output bootstrapper.py)"
      sh -c "[[ -e '/opt/app-root/bin/utils/requirements-elyra.txt' ]] && (echo 'requirements-elyra.txt file already exists'; cp '/opt/app-root/bin/utils/requirements-elyra.txt' .) || (echo 'Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'; curl --fail -H 'Cache-Control: no-cache' -L 'https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt' --output requirements-elyra.txt)"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'training' --cos-endpoint 'https://minio-s3-eder-elyra.apps.prod.rhoai.rh-aiservices-bu.com' --cos-bucket 'pipeline-artifacts' --cos-directory 'training-0401151659' --cos-dependencies-archive 'harshad-f4618382-1f45-4ec7-9a01-ad09becdc073.tar.gz' --file 'instructlab-elyra/harshad.ipynb' "
"""

factory_515ee1eb897ee523776e2b44520b047b745f3087c1628dcf7040b9071f6de010 = (
    kfp.components.load_component_from_text(
        component_def_515ee1eb897ee523776e2b44520b047b745f3087c1628dcf7040b9071f6de010
    )
)


@kfp.dsl.pipeline(name="training")
def generated_pipeline():

    # Task for node 'harshad'
    task_f4618382_1f45_4ec7_9a01_ad09becdc073 = (
        factory_515ee1eb897ee523776e2b44520b047b745f3087c1628dcf7040b9071f6de010()
    )

    secret.use_secret_as_env(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073,
        "dashboard-dspa-secret",
        {
            "AWS_ACCESS_KEY_ID": "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY": "AWS_SECRET_ACCESS_KEY",
        },
    )

    task_f4618382_1f45_4ec7_9a01_ad09becdc073.set_display_name("harshad")

    task_f4618382_1f45_4ec7_9a01_ad09becdc073.set_env_variable(
        name="ELYRA_RUNTIME_ENV", value="kfp"
    )

    task_f4618382_1f45_4ec7_9a01_ad09becdc073.set_env_variable(
        name="ELYRA_ENABLE_PIPELINE_INFO", value="True"
    )

    task_f4618382_1f45_4ec7_9a01_ad09becdc073.set_env_variable(
        name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp"
    )

    task_f4618382_1f45_4ec7_9a01_ad09becdc073.set_env_variable(
        name="ELYRA_RUN_NAME", value="{{workflow.uid}}"
    )

    add_pod_label(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073, "elyra/node-type", "notebook-script"
    )

    add_pod_label(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073, "elyra/pipeline-name", "training"
    )

    add_pod_label(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073, "elyra/pipeline-version", ""
    )

    add_pod_label(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073, "elyra/experiment-name", ""
    )

    add_pod_label(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073, "elyra/node-name", "harshad"
    )

    add_pod_annotation(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073,
        "elyra/node-file-name",
        """instructlab-elyra/harshad.ipynb""",
    )

    add_pod_annotation(
        task_f4618382_1f45_4ec7_9a01_ad09becdc073,
        "elyra/pipeline-source",
        """training.pipeline""",
    )


if __name__ == "__main__":
    from pathlib import Path

    kfp.compiler.Compiler().compile(
        pipeline_func=generated_pipeline,
        package_path=Path(__file__).with_suffix(".yaml").name,
    )
